# Generated by Django 3.0.11 on 2021-03-11 09:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('pmid', models.CharField(blank=True, max_length=200, null=True)),
                ('abstract', models.TextField(blank=True, verbose_name='description')),
                ('journal', models.CharField(blank=True, max_length=200, null=True)),
                ('volume', models.IntegerField(blank=True, null=True)),
                ('releaseDate', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Institute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('projectId', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('status', models.CharField(choices=[('PENDING', 'Pending approval'), ('PUBLIC', 'Public'), ('PRIVATE', 'Private'), ('RESTRICTED', 'Restricted')], default='PRIVATE', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='project_created_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Study',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('studyId', models.SlugField(max_length=200)),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('status', models.CharField(choices=[('PENDING', 'Pending approval'), ('PUBLIC', 'Public'), ('PRIVATE', 'Private'), ('RESTRICTED', 'Restricted')], default='PRIVATE', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('topics', models.CharField(choices=[('GONAD DEVELOPMENT', 'Gonad development'), ('OTHER', 'Other')], default='PRIVATE', max_length=100)),
                ('article', models.ManyToManyField(blank=True, related_name='study_from', to='studies.Article')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='study_created_by', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='study_of', to='studies.Project')),
            ],
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullName', models.CharField(max_length=200)),
                ('affiliation', models.ManyToManyField(blank=True, related_name='author_from', to='studies.Institute')),
            ],
        ),
        migrations.AddField(
            model_name='article',
            name='author',
            field=models.ManyToManyField(blank=True, related_name='write_by', to='studies.Author'),
        ),
    ]
